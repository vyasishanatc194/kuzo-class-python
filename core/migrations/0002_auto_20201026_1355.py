# Generated by Django 3.0.5 on 2020-10-26 08:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agenda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Agenda',
                'verbose_name_plural': 'Agenda',
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_cusotmer_id', models.CharField(blank=True, max_length=255, verbose_name='Stripe cusotmer Id')),
                ('card_number', models.CharField(blank=True, max_length=255, verbose_name='Last 4 digits')),
                ('card_expiration_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Card',
                'verbose_name_plural': 'Cards',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Category',
            },
        ),
        migrations.CreateModel(
            name='Charge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_id', models.CharField(blank=True, max_length=255, verbose_name='Card Id')),
                ('customer_id', models.CharField(blank=True, max_length=255, verbose_name='Customer Id')),
                ('charge_id', models.CharField(blank=True, max_length=255, verbose_name='Charge Id')),
                ('charge_object', models.CharField(blank=True, max_length=255, null=True, verbose_name='Object')),
                ('amount', models.CharField(blank=True, max_length=255, null=True, verbose_name='Amount')),
                ('amount_refunded', models.CharField(blank=True, max_length=255, null=True, verbose_name='Amount refunded')),
                ('application', models.CharField(blank=True, max_length=255, null=True, verbose_name='Application')),
                ('application_fee', models.CharField(blank=True, max_length=255, null=True, verbose_name='Application fee')),
                ('application_fee_amount', models.CharField(blank=True, max_length=255, null=True, verbose_name='Application fee amount')),
                ('balance_transaction', models.CharField(blank=True, max_length=255, verbose_name='Balance transaction')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Phone')),
                ('calculated_statement_descriptor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Calculated statement descriptor')),
                ('captured', models.BooleanField()),
                ('created', models.CharField(blank=True, max_length=255, null=True, verbose_name='Created')),
                ('currency', models.CharField(blank=True, max_length=255, null=True, verbose_name='Currency')),
                ('customer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Customer')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Description')),
                ('disputed', models.BooleanField()),
                ('failure_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Failure code')),
                ('failure_message', models.CharField(blank=True, max_length=255, null=True, verbose_name='Failure message')),
                ('fraud_details', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fraud details')),
                ('invoice', models.CharField(blank=True, max_length=255, null=True, verbose_name='Invoice')),
                ('livemode', models.BooleanField()),
                ('metadata', models.CharField(blank=True, max_length=255, null=True, verbose_name='Metadata')),
                ('on_behalf_of', models.CharField(blank=True, max_length=255, null=True, verbose_name='On behalf of')),
                ('order', models.CharField(blank=True, max_length=255, null=True, verbose_name='Order')),
                ('outcome', models.CharField(blank=True, max_length=255, null=True, verbose_name='Outcome')),
                ('paid', models.BooleanField()),
                ('payment_intent', models.CharField(blank=True, max_length=255, null=True, verbose_name='Payment intent')),
                ('payment_method', models.CharField(blank=True, max_length=255, verbose_name='Card Id')),
                ('brand', models.CharField(blank=True, max_length=255, null=True, verbose_name='Brand')),
                ('address_line1_check', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address line1 check')),
                ('address_postal_code_check', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address postal code check')),
                ('cvc_check', models.CharField(blank=True, max_length=255, null=True, verbose_name='CVC check')),
                ('country', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country')),
                ('exp_month', models.CharField(blank=True, max_length=255, null=True, verbose_name='Exp month')),
                ('exp_year', models.CharField(blank=True, max_length=255, null=True, verbose_name='Exp year')),
                ('fingerprint', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fingerprint')),
                ('funding', models.CharField(blank=True, max_length=255, null=True, verbose_name='Funding')),
                ('installments', models.CharField(blank=True, max_length=255, null=True, verbose_name='Installments')),
                ('last4', models.CharField(blank=True, max_length=255, null=True, verbose_name='Last4 digit')),
                ('network', models.CharField(blank=True, max_length=255, null=True, verbose_name='Network')),
                ('three_d_secure', models.CharField(blank=True, max_length=255, null=True, verbose_name='3D secure')),
                ('wallet', models.CharField(blank=True, max_length=255, null=True, verbose_name='Wallet')),
                ('charge_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Type')),
                ('receipt_email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Receipt email')),
                ('receipt_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Receipt number')),
                ('receipt_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='Receipt URL')),
                ('refunded', models.BooleanField()),
                ('refunds_object', models.CharField(blank=True, max_length=255, null=True, verbose_name='Refunds object')),
                ('refunds_data', models.CharField(blank=True, max_length=255, null=True, verbose_name='Refunds data')),
                ('refunds_has_more', models.BooleanField()),
                ('refunds_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='Refunds URL')),
                ('review', models.CharField(blank=True, max_length=255, null=True, verbose_name='Review')),
                ('shipping', models.CharField(blank=True, max_length=255, null=True, verbose_name='Shipping')),
                ('source_transfer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Source transfer')),
                ('statement_descriptor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Statement descriptor')),
                ('statement_descriptor_suffix', models.CharField(blank=True, max_length=255, null=True, verbose_name='Statement descriptor suffix')),
                ('status', models.CharField(blank=True, max_length=255, null=True, verbose_name='Status')),
                ('transfer_data', models.CharField(blank=True, max_length=255, null=True, verbose_name='Transfer data')),
                ('transfer_group', models.CharField(blank=True, max_length=255, null=True, verbose_name='Transfer group')),
                ('source', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Source')),
            ],
            options={
                'verbose_name': 'Charge',
                'verbose_name_plural': 'Charges',
            },
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'ContactUs',
                'verbose_name_plural': 'ContactUs',
            },
        ),
        migrations.CreateModel(
            name='Credit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('number_of_credit', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'Credit',
                'verbose_name_plural': 'Credits',
            },
        ),
        migrations.CreateModel(
            name='CreditOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='amount')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('credit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credit_order', to='core.Credit')),
            ],
            options={
                'verbose_name': 'Credit Order',
                'verbose_name_plural': 'Credit Order',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_types', models.CharField(blank=True, choices=[('class_qa', 'Class + Q&A (60min)'), ('meet_&_greet', 'Meet & Greet (20 min)')], max_length=222, null=True, verbose_name='Event Types')),
                ('about', models.TextField(blank=True, null=True, verbose_name='About')),
                ('event_date_time', models.DateTimeField(blank=True, null=True, verbose_name='Event date & time')),
                ('price', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Event date & time')),
                ('photo', models.FileField(blank=True, null=True, upload_to='event')),
                ('number_of_participants', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Event number of participants')),
                ('remianing_spots', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Event Remianing spots')),
                ('credit_required', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Event Credit required')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Is featured')),
                ('is_popular', models.BooleanField(default=False, verbose_name='Is popular')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='EventClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Event Class',
                'verbose_name_plural': 'Event Class',
            },
        ),
        migrations.CreateModel(
            name='EventOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used_credit', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Used credit')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evntorder_order', to='core.Event')),
            ],
            options={
                'verbose_name': 'Event Order',
                'verbose_name_plural': 'Event Order',
            },
        ),
        migrations.CreateModel(
            name='EventPracticeAudienceQA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(blank=True, null=True, verbose_name='Answer')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evnt_qa', to='core.Event')),
            ],
            options={
                'verbose_name': 'Event Practice Audience QA',
                'verbose_name_plural': 'Event Practice Audience QA',
            },
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faq_types', models.CharField(blank=True, choices=[('general_faq', 'General_Faq'), ('event_faq', 'Event_Faq'), ('guideline_faq', 'Guideline_Faq')], max_length=222, null=True, verbose_name='Faq Types')),
                ('answer', models.TextField(blank=True, null=True, verbose_name='Answer')),
            ],
            options={
                'verbose_name': 'Faq',
                'verbose_name_plural': 'Faq',
            },
        ),
        migrations.CreateModel(
            name='InfluencerOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Influencer Offer',
                'verbose_name_plural': 'Influencer Offer',
            },
        ),
        migrations.CreateModel(
            name='InfluencerTransferredMoney',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('status', models.CharField(blank=True, choices=[('success', 'Success'), ('fail', 'Fail')], default='fail', max_length=222, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=222, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'Influencer Transferred Money',
                'verbose_name_plural': 'Influencer Transferred Money',
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('icon', models.FileField(blank=True, null=True, upload_to='icon', verbose_name='Icon')),
            ],
            options={
                'verbose_name': 'Offer',
                'verbose_name_plural': 'Offers',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('charge_id', models.CharField(blank=True, max_length=222, null=True)),
                ('ordre_status', models.CharField(blank=True, choices=[('success', 'Success'), ('pending', 'Pending')], default='pending', max_length=222, null=True)),
                ('expire_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'Subscription Order',
                'verbose_name_plural': 'Subscription Orders',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Title')),
                ('price', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('number_of_credit', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Subscription Plan',
                'verbose_name_plural': 'Subscription Plan',
            },
        ),
        migrations.CreateModel(
            name='Transactionlog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(blank=True, choices=[('credit', 'Credit'), ('direct_purchase', 'Direct_purchase'), ('subscription', 'Subscription')], max_length=222, null=True)),
                ('amount', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('credit', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('types', models.CharField(blank=True, choices=[('credit', 'Credit'), ('debit', 'Debit')], max_length=222, null=True)),
                ('transaction_status', models.CharField(blank=True, choices=[('success', 'Success'), ('pending', 'Pending')], default='pending', max_length=222, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=222, null=True)),
            ],
            options={
                'verbose_name': 'Transaction log',
                'verbose_name_plural': 'Transaction log',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.FileField(blank=True, null=True, upload_to='photo', verbose_name='Photo')),
                ('video', models.FileField(blank=True, null=True, upload_to='video', verbose_name='Video')),
                ('about', models.TextField(blank=True, null=True, verbose_name='About')),
                ('credit', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('follwer', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('is_popular', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('influencer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_catgeory', to='core.Category')),
                ('subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_subscription_plan', to='core.SubscriptionPlan')),
            ],
            options={
                'verbose_name': 'Class',
                'verbose_name_plural': 'Class',
            },
        ),
        migrations.RemoveField(
            model_name='company_profile',
            name='user',
        ),
        migrations.RemoveField(
            model_name='image',
            name='post',
        ),
        migrations.RemoveField(
            model_name='notification',
            name='user',
        ),
        migrations.RemoveField(
            model_name='post_category',
            name='user',
        ),
        migrations.RemoveField(
            model_name='post_show',
            name='user',
        ),
        migrations.DeleteModel(
            name='User_Emp',
        ),
        migrations.RemoveField(
            model_name='user_invitation',
            name='user',
        ),
        migrations.RemoveField(
            model_name='user_profile',
            name='user',
        ),
        migrations.DeleteModel(
            name='User_Role',
        ),
        migrations.DeleteModel(
            name='User_Social_Access',
        ),
        migrations.RemoveField(
            model_name='banner',
            name='image',
        ),
        migrations.RemoveField(
            model_name='banner',
            name='link',
        ),
        migrations.RemoveField(
            model_name='user',
            name='city',
        ),
        migrations.RemoveField(
            model_name='user',
            name='confirm_password',
        ),
        migrations.RemoveField(
            model_name='user',
            name='dob',
        ),
        migrations.RemoveField(
            model_name='user',
            name='mobile',
        ),
        migrations.RemoveField(
            model_name='user',
            name='owner_id',
        ),
        migrations.RemoveField(
            model_name='user',
            name='plan',
        ),
        migrations.RemoveField(
            model_name='user',
            name='role',
        ),
        migrations.AddField(
            model_name='banner',
            name='icimageon',
            field=models.FileField(blank=True, null=True, upload_to='image', verbose_name='image'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_influencer',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='banner',
            name='description',
            field=models.TextField(blank=True, null=True, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='banner',
            name='title',
            field=models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='password',
            field=models.CharField(max_length=128, verbose_name='password'),
        ),
        migrations.DeleteModel(
            name='Company_Profile',
        ),
        migrations.DeleteModel(
            name='Company_Role',
        ),
        migrations.DeleteModel(
            name='Image',
        ),
        migrations.DeleteModel(
            name='Notification',
        ),
        migrations.DeleteModel(
            name='Plan',
        ),
        migrations.DeleteModel(
            name='Post_Category',
        ),
        migrations.DeleteModel(
            name='Post_Show',
        ),
        migrations.DeleteModel(
            name='User_Invitation',
        ),
        migrations.DeleteModel(
            name='User_Profile',
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to='core.User'),
        ),
        migrations.AddField(
            model_name='transactionlog',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transaction_user', to='core.User'),
        ),
        migrations.AddField(
            model_name='subscriptionorder',
            name='subscription',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscriptionorder_plan', to='core.SubscriptionPlan'),
        ),
        migrations.AddField(
            model_name='subscriptionorder',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscriptionorder_user', to='core.User'),
        ),
        migrations.AddField(
            model_name='influencertransferredmoney',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_influncer', to='core.User'),
        ),
        migrations.AddField(
            model_name='influenceroffer',
            name='offer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='influenceroffer_offer', to='core.Offer'),
        ),
        migrations.AddField(
            model_name='influenceroffer',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='influenceroffer_user', to='core.User'),
        ),
        migrations.AddField(
            model_name='eventorder',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eventorder_user', to='core.User'),
        ),
        migrations.AddField(
            model_name='eventclass',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_class_user', to='core.User'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evnt_eventclass', to='core.EventClass'),
        ),
        migrations.AddField(
            model_name='event',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_user', to='core.User'),
        ),
        migrations.AddField(
            model_name='creditorder',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditorder_user', to='core.User'),
        ),
        migrations.AddField(
            model_name='charge',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.User'),
        ),
        migrations.AddField(
            model_name='card',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.User'),
        ),
        migrations.AddField(
            model_name='agenda',
            name='event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evnt_agenda', to='core.Event'),
        ),
    ]
